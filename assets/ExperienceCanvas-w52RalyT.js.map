{"version":3,"file":"ExperienceCanvas-w52RalyT.js","sources":["../../src/components/experience/ExperienceCanvas.jsx"],"sourcesContent":["import { useAnimations, useFBX, useGLTF } from '@react-three/drei';\r\nimport { useEffect, useRef } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nconst ExperienceCanvas = ({ animationName = 'idle', ...props }) => {\r\n  const group = useRef(null);\r\n\r\n  // useGLTF.preload(`${import.meta.env.BASE_URL}/models/3DMe-draco.glb`);\r\n  // useGLTF.preload(`${import.meta.env.BASE_URL}/models/animations/idle.glb`);\r\n  // useGLTF.preload(`${import.meta.env.BASE_URL}/models/animations/salute.glb`);\r\n  // useGLTF.preload(`${import.meta.env.BASE_URL}/models/animations/clapping.glb`);\r\n  // useGLTF.preload(`${import.meta.env.BASE_URL}/models/animations/victory.glb`);\r\n\r\n  // Load model\r\n  const { scene, nodes, materials } = useGLTF(\r\n    `${import.meta.env.BASE_URL}/models/3DMe-draco.glb`\r\n  );\r\n\r\n  // Load animations\r\n  const { animations: idleAnimation } = useFBX(\r\n    `${import.meta.env.BASE_URL}/models/animations/idle.fbx`\r\n  );\r\n  const { animations: saluteAnimation } = useFBX(\r\n    `${import.meta.env.BASE_URL}/models/animations/salute.fbx`\r\n  );\r\n  const { animations: clappingAnimation } = useFBX(\r\n    `${import.meta.env.BASE_URL}/models/animations/clapping.fbx`\r\n  );\r\n  const { animations: victoryAnimation } = useFBX(\r\n    `${import.meta.env.BASE_URL}/models/animations/victory.fbx`\r\n  );\r\n\r\n  const clips = [];\r\n  if (idleAnimation?.[0]) {\r\n    idleAnimation[0].name = 'idle';\r\n    clips.push(idleAnimation[0]);\r\n  }\r\n  if (saluteAnimation?.[0]) {\r\n    saluteAnimation[0].name = 'salute';\r\n    clips.push(saluteAnimation[0]);\r\n  }\r\n  if (clappingAnimation?.[0]) {\r\n    clappingAnimation[0].name = 'clapping';\r\n    clips.push(clappingAnimation[0]);\r\n  }\r\n  if (victoryAnimation?.[0]) {\r\n    victoryAnimation[0].name = 'victory';\r\n    clips.push(victoryAnimation[0]);\r\n  }\r\n  // Bind animations\r\n  const { actions } = useAnimations(clips, group);\r\n\r\n  // Switch animations\r\n  useEffect(() => {\r\n    if (actions && animationName) {\r\n      const action = actions[animationName] || actions['idle'];\r\n\r\n      Object.values(actions).forEach(a => {\r\n        if (a && a !== action) {\r\n          a.fadeOut(0.5);\r\n          a.stop();\r\n        }\r\n      });\r\n\r\n      if (action) {\r\n        action.reset().fadeIn(0.5).play();\r\n      }\r\n\r\n      return () => {\r\n        if (action) action.fadeOut(0.5);\r\n      };\r\n    }\r\n  }, [animationName, actions]);\r\n\r\n  // --- Responsive sizing (built-in) ---\r\n  const isSmall = useMediaQuery({ maxWidth: 480 });\r\n  const isMobile = useMediaQuery({ maxWidth: 768 });\r\n  const isTablet = useMediaQuery({ maxWidth: 1024 });\r\n  const isExtraLarge = useMediaQuery({ minWidth: 1536 });\r\n\r\n  const calculateSizes = () => {\r\n    if (isSmall) return { scale: 1.5, positionY: -2.2 };\r\n    if (isMobile) return { scale: 2, positionY: -2.5 };\r\n    if (isTablet) return { scale: 2.5, positionY: -2.8 };\r\n    if (isExtraLarge) return { scale: 3.5, positionY: -3.2 };\r\n    return { scale: 3, positionY: -3 }; // default desktop\r\n  };\r\n\r\n  const { scale, positionY } = calculateSizes();\r\n\r\n  return (\r\n    <group\r\n      ref={group}\r\n      dispose={null}\r\n      scale={scale}\r\n      position={[0, positionY, 0]}\r\n      {...props}\r\n    >\r\n      <primitive object={scene} />\r\n      <skinnedMesh\r\n        name=\"EyeLeft\"\r\n        geometry={nodes.EyeLeft.geometry}\r\n        material={materials.Wolf3D_Eye}\r\n        skeleton={nodes.EyeLeft.skeleton}\r\n        morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}\r\n        morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}\r\n      />\r\n      <skinnedMesh\r\n        name=\"EyeRight\"\r\n        geometry={nodes.EyeRight.geometry}\r\n        material={materials.Wolf3D_Eye}\r\n        skeleton={nodes.EyeRight.skeleton}\r\n        morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}\r\n        morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}\r\n      />\r\n      <skinnedMesh\r\n        name=\"Wolf3D_Head\"\r\n        geometry={nodes.Wolf3D_Head.geometry}\r\n        material={materials.Wolf3D_Skin}\r\n        skeleton={nodes.Wolf3D_Head.skeleton}\r\n        morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}\r\n        morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}\r\n      />\r\n      <skinnedMesh\r\n        name=\"Wolf3D_Teeth\"\r\n        geometry={nodes.Wolf3D_Teeth.geometry}\r\n        material={materials.Wolf3D_Teeth}\r\n        skeleton={nodes.Wolf3D_Teeth.skeleton}\r\n        morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}\r\n        morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}\r\n      />\r\n      <skinnedMesh\r\n        geometry={nodes.Wolf3D_Hair.geometry}\r\n        material={materials.Wolf3D_Hair}\r\n        skeleton={nodes.Wolf3D_Hair.skeleton}\r\n      />\r\n      <skinnedMesh\r\n        geometry={nodes.Wolf3D_Outfit_Top.geometry}\r\n        material={materials.Wolf3D_Outfit_Top}\r\n        skeleton={nodes.Wolf3D_Outfit_Top.skeleton}\r\n      />\r\n      <skinnedMesh\r\n        geometry={nodes.Wolf3D_Outfit_Bottom.geometry}\r\n        material={materials.Wolf3D_Outfit_Bottom}\r\n        skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}\r\n      />\r\n      <skinnedMesh\r\n        geometry={nodes.Wolf3D_Outfit_Footwear.geometry}\r\n        material={materials.Wolf3D_Outfit_Footwear}\r\n        skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}\r\n      />\r\n      <skinnedMesh\r\n        geometry={nodes.Wolf3D_Body.geometry}\r\n        material={materials.Wolf3D_Body}\r\n        skeleton={nodes.Wolf3D_Body.skeleton}\r\n      />\r\n    </group>\r\n  );\r\n};\r\n\r\nuseGLTF.preload(`${import.meta.env.BASE_URL}/models/3DMe-draco.glb`);\r\n\r\nexport default ExperienceCanvas;\r\n"],"names":["ExperienceCanvas","animationName","props","group","useRef","scene","nodes","materials","useGLTF","idleAnimation","useFBX","saluteAnimation","clappingAnimation","victoryAnimation","clips","actions","useAnimations","useEffect","action","a","isSmall","useMediaQuery","isMobile","isTablet","isExtraLarge","calculateSizes","scale","positionY","jsxs","jsx"],"mappings":"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"}